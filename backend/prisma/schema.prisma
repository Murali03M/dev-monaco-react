// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "../ERD.png"

}


datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  email       String       @unique
  password    String
  name        String
  skillLevel  SkillLevel
  interests   String[]
  createdAt   DateTime     @default(now())
  role        UserRole     @default(USER)
  submissions Submission[]
  updatedAt   DateTime     @updatedAt
}

model Submission {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  problemId        String
  userId           String
  languageId       String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  code             String
  fullCode         String
  status           SubmissionResult @default(PENDING)
  testcases        TestCase[]
  memory           Int?
  time             Float?
  user             User         @relation(fields: [userId], references: [id])
  language         Language     @relation(fields: [languageId], references: [id])
  problem          Problem      @relation(fields: [problemId], references: [id])
}

model Language {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  judge0Id    Int            @unique
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  submissions Submission[]
  defaultCode DefaultCode[]
}

model TestCase {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  status           TestCaseResult  @default(PENDING)
  index            Int
  submissionId     String
  submission       Submission      @relation(fields: [submissionId], references: [id])
  
  memory           Int?
  time             Float?
  judge0TrackingId String          @unique
}

model DefaultCode {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  languageId  String
  problemId   String
  code        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  problem     Problem       @relation(fields: [problemId], references: [id])
  language    Language      @relation(fields: [languageId], references: [id])
  @@unique([problemId, languageId])
}

model Problem {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  slug          String            @unique
  solved        Int               @default(0)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  difficulty    Difficulty        @default(MEDIUM)
  submissions   Submission[]
  defaultCode   DefaultCode[]
  tag           String[]
}

enum SubmissionResult {
  AC
  REJECTED
  PENDING
}

enum TestCaseResult {
  AC
  FAIL
  TLE
  COMPILATION_ERROR
  PENDING
}

enum Category {
  EASY
  MEDIUM
  HARD
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum ProgressStatus {
  ATTEMPTED
  SOLVED
}

enum UserRole {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
